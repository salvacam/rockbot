TARGET 		= rockbot.dge


CHAINPREFIX=/opt/miyoo
CROSS_COMPILE=$(CHAINPREFIX)/usr/bin/arm-linux-

CC = $(CROSS_COMPILE)gcc

SYSROOT := $(shell $(CC) --print-sysroot)
SDL_CONFIG = $(SYSROOT)/usr/bin/sdl-config
SDL_CFLAGS := $(shell $(SYSROOT)/usr/bin/sdl-config --cflags)
SDL_LIBS := $(shell $(SYSROOT)/usr/bin/sdl-config --libs)

DEFAULT_CFLAGS = $(shell $(SDL_CONFIG) --cflags) 


CFLAGS   	= $(DEFAULT_CFLAGS) -Wall -O3 -DDINGUX -DHANDHELD -g -I$(SYSROOT)/usr/include -I$(SYSROOT)/usr/lib -I$(SYSROOT)/lib
CXXFLAGS 	= $(CFLAGS) -fexceptions -fno-rtti
LDFLAGS 	= -L$(SYSROOT)/usr/lib -lm -lc -lstdc++ -lc -lSDL -lSDL_mixer -lvorbisidec -logg -lSDL_ttf -lfreetype -lSDL_image -ljpeg -lpng -lz 

HOST    	= arm-linux-
OBJS   		= main.o options/key_map.o inputlib.o timerlib.o soundlib.o file/file_io.o collision_detection.o graphicslib.o \
sceneslib.o stage_select.o graphic/option_picker.o classmap.o objects/object.o character/character.o projectilelib.o \
graphic/animation.o stage.o class_config.o scenes/dialogs.o game.o character/classplayer.o \
character/classnpc.o character/artificial_inteligence.o aux_tools/trajectory_parabola.o file/convert.o \
graphic/draw.o graphic/gfx_sin_wave.o character/movement/jump.o character/movement/inertia.o scenes/sceneshow.o \
game_mediator.o ports/psp/psp_ram.o strings_map.o file/fio_strings.o file/fio_common.o \
file/fio_scenes.o aux_tools/stringutils.o aux_tools/fps_control.o docs/game_manual.o

$(TARGET): $(OBJS)
	$(HOST)g++ $(OBJS) -o $@ $(LDFLAGS)

%.o: %.c
	$(HOST)gcc $(CFLAGS) -c $< -o $@

%.o: %.cpp
	$(HOST)g++ $(CXXFLAGS) -c $< -o $@

clean:
	rm -f $(TARGET) $(OBJS)
 
